{"version":3,"sources":["assets/initialState.js","assets/initialDie.js","assets/navLinks.js","assets/diceTypes.js","redux/reducers/diceReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/reducers/resultsReducer.js","components/NavBar.js","components/diceRoller/AddRow.js","redux/actions/index.js","components/diceRoller/ClearResults.js","components/diceRoller/elements/ColorPicker.js","components/diceRoller/elements/CustomizerRow.js","components/diceRoller/elements/Delete.js","components/diceRoller/elements/DieAmount.js","components/diceRoller/elements/DieType.js","components/diceRoller/elements/Edit.js","components/diceRoller/elements/ModAmount.js","components/diceRoller/elements/Name.js","components/diceRoller/elements/ResultRow.js","components/diceRoller/elements/RollRow.js","components/diceRoller/Dice.js","pages/DiceRoller.js","app.js","pages/AbilityScoreRoller.js","index.js"],"names":["initialState","uuidv4","name","edit","dieAmount","dieType","modAmount","color","initialDie","navLinks","id","to","title","diceTypes","savedState","JSON","parse","localStorage","getItem","stateOnLoad","combineReducers","dice","state","action","type","stateDieAmount","payload","setItem","stringify","stateDieType","stateModAmount","stateName","stateColor","stateRemoveRow","stateAddRow","stateToggleEdit","results","newState","withStyles","root","backgroundColor","classes","useState","drawer","setDrawer","AppBar","className","position","elevation","style","margin","Container","maxWidth","disableGutters","Toolbar","variant","display","justifyContent","Typography","Drawer","anchor","open","ModalProps","onBackdropClick","IconButton","onClick","aria-label","Divider","List","component","subheader","ListSubheader","map","link","key","ListItem","button","ListItemIcon","ListItemText","primary","connect","addRow","border","Button","disableElevation","clearResults","marginLeft","ownProps","updateColor","value","setOpen","colors","onChange","e","stopPropagation","hex","setTimeout","handleChange","width","circleSize","circleSpacing","removeRow","updateDieAmount","borderColor","borderWidth","label","TextField","target","handleDieAmount","InputProps","inputProps","min","textAlign","updateDieType","select","handleDieType","MenuItem","toggleEdit","handleEdit","updateModAmount","handleModAmount","updateName","size","handleUpdateName","result","undefined","rolls","join","subtotal","Math","abs","total","renderResultRow","die","handleRoll","Delete","addResult","Paper","marginBottom","background","Number","i","roll","ceil","random","Object","entries","app","Component","store","createStore","reducers","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0d429a93.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid'\n\nexport const initialState = {\n   [uuidv4()]: {\n      name: '',\n      edit: false,\n      dieAmount: 1,\n      dieType: 20,\n      modAmount: 0,\n      color: '#F94144',\n   },\n}\n","export const initialDie = {\n   name: '',\n   edit: false,\n   dieAmount: 1,\n   dieType: 20,\n   modAmount: 0,\n   color: '#F94144',\n}\n","export const navLinks = [\n   {\n      id: 1,\n      to: '/',\n      title: 'Dice Roller',\n   },\n   {\n      id: 2,\n      to: '/ability-score-roller',\n      title: 'Ability Score Roller',\n   },\n]\n","export const diceTypes = [4, 6, 8, 10, 12, 20]\n","import { v4 as uuidv4 } from 'uuid'\nimport {\n   UPDATE_DIE_AMOUNT,\n   UPDATE_DIE_TYPE,\n   UPDATE_MOD_AMOUNT,\n   UPDATE_NAME,\n   UPDATE_COLOR,\n   REMOVE_ROW,\n   ADD_ROW,\n   TOGGLE_EDIT,\n} from '../actions/types'\nimport { initialState, initialDie } from '../../assets'\n\nconst savedState = JSON.parse(localStorage.getItem('dnd_dice_roller'))\n\nconst stateOnLoad = () => {\n   if (savedState === null) {\n      return initialState\n   } else {\n      return savedState\n   }\n}\n\nexport default (state = stateOnLoad(), action) => {\n   switch (action.type) {\n      case UPDATE_DIE_AMOUNT:\n         const stateDieAmount = {\n            ...state,\n            [action.id]: { ...state[action.id], dieAmount: action.payload },\n         }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateDieAmount))\n         return stateDieAmount\n      case UPDATE_DIE_TYPE:\n         const stateDieType = {\n            ...state,\n            [action.id]: { ...state[action.id], dieType: action.payload },\n         }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateDieType))\n         return stateDieType\n      case UPDATE_MOD_AMOUNT:\n         const stateModAmount = {\n            ...state,\n            [action.id]: { ...state[action.id], modAmount: action.payload },\n         }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateModAmount))\n         return stateModAmount\n      case UPDATE_NAME:\n         const stateName = { ...state, [action.id]: { ...state[action.id], name: action.payload } }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateName))\n         return stateName\n      case UPDATE_COLOR:\n         const stateColor = {\n            ...state,\n            [action.id]: { ...state[action.id], color: action.payload },\n         }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateColor))\n         return stateColor\n      case REMOVE_ROW:\n         const { [action.id]: _, ...stateRemoveRow } = state\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateRemoveRow))\n         return stateRemoveRow\n      case ADD_ROW:\n         const stateAddRow = { ...state, [uuidv4()]: { ...initialDie } }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateAddRow))\n         return stateAddRow\n      case TOGGLE_EDIT:\n         const stateToggleEdit = {\n            ...state,\n            [action.id]: { ...state[action.id], edit: !state[action.id].edit },\n         }\n         localStorage.setItem('dnd_dice_roller', JSON.stringify(stateToggleEdit))\n         return stateToggleEdit\n      default:\n         return state\n   }\n}\n","import { combineReducers } from 'redux'\nimport diceReducer from './diceReducer'\nimport resultsReducer from './resultsReducer'\n\nexport default combineReducers({\n   dice: diceReducer,\n   results: resultsReducer,\n})\n","export const UPDATE_DIE_AMOUNT = 'UPDATE_DIE_AMOUNT'\nexport const UPDATE_DIE_TYPE = 'UPDATE_DIE_TYPE'\nexport const UPDATE_MOD_AMOUNT = 'UPDATE_MOD_AMOUNT'\nexport const UPDATE_NAME = 'UPDATE_NAME'\nexport const UPDATE_COLOR = 'UPDATE_COLOR'\nexport const REMOVE_ROW = 'REMOVE_ROW'\nexport const ADD_ROW = 'ADD_ROW'\nexport const TOGGLE_EDIT = 'TOGGLE_EDIT'\n\nexport const ADD_RESULT = 'ADD_RESULT'\nexport const CLEAR_RESULTS = 'CLEAR_RESULTS'\n","import { ADD_RESULT, CLEAR_RESULTS } from '../actions/types'\n\nexport default (state = {}, action) => {\n   switch (action.type) {\n      case ADD_RESULT:\n         const { [action.id]: _, ...newState } = state\n         return { [action.id]: action.payload, ...newState }\n      case CLEAR_RESULTS:\n         return {}\n      default:\n         return state\n   }\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { navLinks } from '../assets'\n\nimport { withStyles } from '@material-ui/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Container from '@material-ui/core/Container'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport Drawer from '@material-ui/core/Drawer'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\nconst styles = {\n   root: {\n      backgroundColor: '#fff',\n   },\n}\n\nconst NavBar = ({ classes }) => {\n   const [drawer, setDrawer] = useState(false)\n\n   const renderNavItems = () => {\n      return navLinks.map((link) => (\n         <Link to={link.to} className='nav-link' key={link.id}>\n            <ListItem button onClick={() => setDrawer(!drawer)}>\n               <ListItemIcon>\n                  <ArrowRightIcon />\n               </ListItemIcon>\n               <ListItemText primary={link.title} />\n            </ListItem>\n         </Link>\n      ))\n   }\n\n   return (\n      <>\n         <AppBar\n            className={classes.root}\n            position='static'\n            elevation={1}\n            style={{ margin: '0 0 24px 0' }}>\n            <Container maxWidth='lg' disableGutters={true}>\n               <Toolbar\n                  variant='dense'\n                  style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant='h6' color='textPrimary'>\n                     DnD Dice Roller\n                  </Typography>\n                  {/* <IconButton aria-label='menu-open' edge='end' onClick={() => setDrawer(!drawer)}>\n                     <MenuIcon />\n                  </IconButton> */}\n               </Toolbar>\n            </Container>\n         </AppBar>\n         <Drawer\n            variant='temporary'\n            anchor='right'\n            open={drawer}\n            ModalProps={{ onBackdropClick: () => setDrawer(!drawer) }}>\n            <div className='nav-drawer'>\n               <IconButton\n                  onClick={() => setDrawer(!drawer)}\n                  aria-label='menu-close'\n                  style={{ margin: '5px' }}>\n                  <ChevronRightIcon />\n               </IconButton>\n               <Divider />\n               <List\n                  component='nav'\n                  subheader={\n                     <ListSubheader component='div'>What roll will you make?</ListSubheader>\n                  }>\n                  {renderNavItems()}\n               </List>\n            </div>\n         </Drawer>\n      </>\n   )\n}\n\nexport default withStyles(styles)(NavBar)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addRow } from '../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport Button from '@material-ui/core/Button'\n\nconst styles = {\n   root: {\n      color: '#43AA8B',\n      border: '1px solid rgba(67, 170, 139,0.5)',\n      '&:hover': {\n         border: '1px solid #43AA8B',\n         backgroundColor: 'rgba(67, 170, 139,0.04)',\n      },\n   },\n}\n\nconst AddRow = ({ addRow, classes }) => {\n   return (\n      <Button\n         className={classes.root}\n         color='primary'\n         variant='outlined'\n         disableElevation\n         onClick={() => addRow()}>\n         Add Row\n      </Button>\n   )\n}\n\nexport default connect(null, { addRow })(withStyles(styles)(AddRow))\n","import {\n   UPDATE_DIE_AMOUNT,\n   UPDATE_DIE_TYPE,\n   UPDATE_MOD_AMOUNT,\n   UPDATE_NAME,\n   UPDATE_COLOR,\n   REMOVE_ROW,\n   ADD_ROW,\n   ADD_RESULT,\n   CLEAR_RESULTS,\n   TOGGLE_EDIT,\n} from './types'\n\nexport const updateDieAmount = (value, id) => {\n   return {\n      type: UPDATE_DIE_AMOUNT,\n      id,\n      payload: value,\n   }\n}\n\nexport const updateDieType = (value, id) => {\n   return {\n      type: UPDATE_DIE_TYPE,\n      id,\n      payload: value,\n   }\n}\n\nexport const updateModAmount = (value, id) => {\n   return {\n      type: UPDATE_MOD_AMOUNT,\n      id,\n      payload: value,\n   }\n}\n\nexport const updateName = (value, id) => {\n   return {\n      type: UPDATE_NAME,\n      id,\n      payload: value,\n   }\n}\n\nexport const updateColor = (value, id) => {\n   return {\n      type: UPDATE_COLOR,\n      id,\n      payload: value,\n   }\n}\n\nexport const removeRow = (id) => {\n   return {\n      type: REMOVE_ROW,\n      id,\n   }\n}\n\nexport const addRow = () => {\n   return {\n      type: ADD_ROW,\n   }\n}\n\nexport const addResult = (result, id) => {\n   return {\n      type: ADD_RESULT,\n      payload: result,\n      id,\n   }\n}\n\nexport const clearResults = () => {\n   return {\n      type: CLEAR_RESULTS,\n   }\n}\n\nexport const toggleEdit = (id) => {\n   return {\n      type: TOGGLE_EDIT,\n      id,\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { clearResults } from '../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport Button from '@material-ui/core/Button'\n\nconst styles = {\n   root: {\n      color: '#F94144',\n      border: '1px solid rgba(249, 65, 68,0.5)',\n      '&:hover': {\n         border: '1px solid #F94144',\n         backgroundColor: 'rgba(249, 65, 68,0.04)',\n      },\n   },\n}\n\nconst ClearResults = ({ clearResults, classes }) => {\n   return (\n      <Button\n         className={classes.root}\n         variant='outlined'\n         disableElevation\n         onClick={() => clearResults()}\n         style={{ marginLeft: '10px' }}>\n         Clear Results\n      </Button>\n   )\n}\n\nexport default connect(null, { clearResults })(withStyles(styles)(ClearResults))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateColor } from '../../../redux/actions'\n\nimport { CirclePicker } from 'react-color'\nimport { withStyles } from '@material-ui/styles'\nimport ToolTip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport PaletteIcon from '@material-ui/icons/Palette'\n\nconst styles = {\n   root: {\n      color: 'rgba(0,0,0,0.7)',\n   },\n}\n\nconst ColorPicker = ({ edit, id, updateColor, color, classes }) => {\n   const [open, setOpen] = useState(false)\n\n   const handleChange = (color, e) => {\n      e.stopPropagation()\n      updateColor(color.hex, id)\n      setTimeout(() => {\n         setOpen(!open)\n      }, 200)\n   }\n\n   if (edit) {\n      return (\n         <div className='color-picker'>\n            <ToolTip title='Pick color'>\n               <IconButton\n                  className={classes.root}\n                  aria-label='pick-color'\n                  onClick={() => setOpen(!open)}>\n                  <PaletteIcon />\n               </IconButton>\n            </ToolTip>\n            {open ? (\n               <CirclePicker\n                  color={color}\n                  colors={[\n                     '#F94144',\n                     '#F3722C',\n                     '#F8961E',\n                     '#F9C74F',\n                     '#90BE6D',\n                     '#43AA8B',\n                     '#577590',\n                  ]}\n                  onChange={(color, e) => handleChange(color, e)}\n                  style={{ position: 'absolute !important' }}\n                  width={220}\n                  circleSize={20}\n                  circleSpacing={10}\n               />\n            ) : null}\n         </div>\n      )\n   } else {\n      return null\n   }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n   return { edit: state.dice[ownProps.id].edit, color: state.dice[ownProps.id].color }\n}\n\nexport default connect(mapStateToProps, { updateColor })(withStyles(styles)(ColorPicker))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { Name, ColorPicker } from './index'\n\nconst CustomizerRow = ({ name, id, edit }) => {\n   return (\n      <div className='dice'>\n         <Name name={name} id={id} />\n         <ColorPicker id={id} />\n      </div>\n   )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n   return { edit: state.dice[ownProps.id].edit }\n}\n\nexport default connect(mapStateToProps)(CustomizerRow)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { removeRow } from '../../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport ToolTip from '@material-ui/core/ToolTip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\n\nconst styles = {\n   root: {\n      color: '#F94144',\n   },\n}\n\nconst RemoveRow = ({ removeRow, id, classes }) => {\n   const handleRemoveRow = () => {\n      removeRow(id)\n   }\n\n   return (\n      <ToolTip title='Delete'>\n         <IconButton className={classes.root} aria-label='delete' onClick={handleRemoveRow}>\n            <DeleteIcon />\n         </IconButton>\n      </ToolTip>\n   )\n}\n\nexport default connect(null, { removeRow })(withStyles(styles)(RemoveRow))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateDieAmount } from '../../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = {\n   root: {\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n         borderColor: '#4ecdc4',\n         borderWidth: '1px',\n      },\n   },\n}\n\nconst DieAmount = ({ id, classes, dieAmount, label, updateDieAmount }) => {\n   const handleDieAmount = (e) => {\n      updateDieAmount(e.target.value, id)\n   }\n\n   return (\n      <TextField\n         className={classes.root}\n         value={dieAmount}\n         type='number'\n         label={label}\n         margin='dense'\n         variant='outlined'\n         onChange={(e) => handleDieAmount(e)}\n         InputProps={{\n            inputProps: {\n               min: 1,\n            },\n         }}\n         inputProps={{ style: { textAlign: 'center' } }}\n         style={{ width: '70px', margin: '4px 0' }}\n      />\n   )\n}\n\nexport default connect(null, { updateDieAmount })(withStyles(styles)(DieAmount))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateDieType } from '../../../redux/actions'\nimport { diceTypes } from '../../../assets'\n\nimport { withStyles } from '@material-ui/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst styles = {\n   root: {\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n         borderColor: '#4ecdc4',\n         borderWidth: '1px',\n      },\n   },\n}\n\nconst DieType = ({ id, updateDieType, dieType, label, classes }) => {\n   const handleDieType = (e) => {\n      updateDieType(e.target.value, id)\n   }\n\n   return (\n      <TextField\n         className={classes.root}\n         select\n         value={dieType}\n         label={label}\n         onChange={(e) => handleDieType(e)}\n         margin='dense'\n         variant='outlined'\n         style={{ width: '80px', margin: '4px 0' }}>\n         {diceTypes.map((type) => (\n            <MenuItem key={type} value={type}>\n               {type}\n            </MenuItem>\n         ))}\n      </TextField>\n   )\n}\n\nexport default connect(null, { updateDieType })(withStyles(styles)(DieType))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleEdit } from '../../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport ToolTip from '@material-ui/core/ToolTip'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\n\nconst styles = {\n   root: {\n      color: '#43AA8B',\n   },\n}\n\nconst Edit = ({ id, toggleEdit, classes, edit }) => {\n   const handleEdit = (e) => {\n      toggleEdit(id)\n      e.stopPropagation()\n   }\n\n   return (\n      <ToolTip title={edit ? 'Save' : 'Edit'}>\n         <IconButton className={classes.root} aria-label='edit' onClick={(e) => handleEdit(e)}>\n            {edit ? <SaveIcon /> : <EditIcon />}\n         </IconButton>\n      </ToolTip>\n   )\n}\n\nexport default connect(null, { toggleEdit })(withStyles(styles)(Edit))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateModAmount } from '../../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = {\n   root: {\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n         borderColor: '#4ecdc4',\n         borderWidth: '1px',\n      },\n   },\n}\n\nconst ModAmount = ({ id, updateModAmount, modAmount, label, classes }) => {\n   const handleModAmount = (e) => {\n      updateModAmount(e.target.value, id)\n   }\n\n   return (\n      <TextField\n         className={classes.root}\n         value={modAmount}\n         type='number'\n         label={label}\n         onChange={(e) => handleModAmount(e)}\n         margin='dense'\n         variant='outlined'\n         style={{ width: '70px', margin: '4px 0' }}\n      />\n   )\n}\n\nexport default connect(null, { updateModAmount })(withStyles(styles)(ModAmount))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateName } from '../../../redux/actions'\n\nimport { withStyles } from '@material-ui/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = {\n   root: {\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n         borderColor: '#4ecdc4',\n         borderWidth: '1px',\n      },\n   },\n}\n\nconst Name = ({ id, updateName, classes, edit, name }) => {\n   const handleUpdateName = (e) => {\n      updateName(e.target.value, id)\n   }\n\n   const renderName = () => {\n      if (edit) {\n         return (\n            <div className='name'>\n               <TextField\n                  className={classes.root}\n                  value={name}\n                  size='small'\n                  variant='outlined'\n                  onChange={(e) => handleUpdateName(e)}\n                  style={{ width: '100%' }}\n               />\n            </div>\n         )\n      } else {\n         if (name) {\n            return (\n               <div className='name'>\n                  <span>{name}</span>\n               </div>\n            )\n         }\n      }\n   }\n\n   return <>{renderName()}</>\n}\n\nconst mapStateToProps = (state, ownProps) => {\n   return { edit: state.dice[ownProps.id].edit }\n}\n\nexport default connect(mapStateToProps, { updateName })(withStyles(styles)(Name))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ResultRow = ({ result }) => {\n   const renderResultRow = (result) => {\n      if (result === undefined) {\n         return (\n            <div className='result'>\n               <div className='result-comp'>\n                  <span>Click the die row to get results!</span>\n               </div>\n            </div>\n         )\n      } else {\n         return (\n            <div className='result'>\n               <div className='result-comp'>\n                  <span>{result.rolls.join(' + ')}</span>\n               </div>\n               <div className='result-comp'>\n                  <span>=</span>\n               </div>\n               <div className='result-comp'>\n                  <span>{result.subtotal}</span>\n               </div>\n               <div className='result-comp'>\n                  <span>{result.modAmount >= 0 ? '+' : '-'}</span>\n               </div>\n               <div className='result-comp'>{Math.abs(result.modAmount)}</div>\n               <div className='result-comp'>\n                  <span>=</span>\n               </div>\n               <div className='result-comp'>\n                  <span>{result.total}</span>\n               </div>\n            </div>\n         )\n      }\n   }\n\n   return <>{renderResultRow(result)}</>\n}\n\nconst mapStateToProps = (state, ownProps) => {\n   return { result: state.results[ownProps.id] }\n}\n\nexport default connect(mapStateToProps)(ResultRow)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { Edit, Delete, DieAmount, DieType, ModAmount } from './index'\n\nconst RollRow = ({ edit, die, id, handleRoll }) => {\n   const { dieAmount, dieType, modAmount, name } = die\n\n   const renderRollRow = () => {\n      if (edit) {\n         return (\n            <div className='dice dice-editable'>\n               <div className='dice-comp'>\n                  <DieAmount dieAmount={dieAmount} id={id} />\n               </div>\n               <div className='dice-comp'>\n                  <span>d</span>\n               </div>\n               <div className='dice-comp'>\n                  <DieType dieType={dieType} id={id} />\n               </div>\n               <div className='dice-comp'>\n                  <ModAmount modAmount={modAmount} id={id} />\n               </div>\n               <div className='dice-comp dice-comp--up'>\n                  <Delete id={id} />\n                  <Edit edit={edit} id={id} />\n               </div>\n            </div>\n         )\n      } else {\n         return (\n            <div className='dice dice-clickable' onClick={(e) => handleRoll(e)}>\n               <div className='dice-comp'>\n                  <span className='dice-comp-info'>{dieAmount}</span>\n               </div>\n               <div className='dice-comp'>\n                  <span>d</span>\n               </div>\n               <div className='dice-comp'>\n                  <span className='dice-comp-info'>{dieType}</span>\n               </div>\n               <div className='dice-comp'>\n                  <span className='dice-comp-info'>{modAmount}</span>\n               </div>\n               <div className={name ? 'dice-comp dice-comp--up' : 'dice-comp'}>\n                  <Edit edit={edit} id={id} />\n               </div>\n            </div>\n         )\n      }\n   }\n\n   return <>{renderRollRow()}</>\n}\n\nconst mapStateToProps = (state, ownProps) => {\n   return { edit: state.dice[ownProps.id].edit }\n}\n\nexport default connect(mapStateToProps)(RollRow)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addResult } from '../../redux/actions'\n\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\n\nimport { CustomizerRow, ResultRow, RollRow } from './elements'\n\nconst Dice = ({ die, id, addResult }) => {\n   const { dieAmount, dieType, modAmount, name, color } = die\n\n   const handleRoll = () => {\n      let result = {\n         rolls: [],\n         subtotal: 0,\n         total: 0,\n         modAmount: Number(modAmount),\n         dieAmount: dieAmount,\n         dieType: Number(dieType),\n      }\n\n      for (let i = 0; i < dieAmount; i++) {\n         const roll = Math.ceil(Math.random() * dieType)\n         result.rolls = [...result.rolls, roll]\n         result.subtotal += roll\n      }\n\n      result.total = result.subtotal + result.modAmount\n      addResult(result, id)\n   }\n\n   return (\n      <>\n         <CustomizerRow name={name} id={id} />\n         <Paper elevation={1} style={{ marginBottom: '10px', position: 'relative' }}>\n            <div className='color-box' style={{ background: color }}></div>\n            <RollRow die={die} id={id} handleRoll={handleRoll} />\n            <Divider />\n            <ResultRow id={id} />\n         </Paper>\n      </>\n   )\n}\n\nexport default connect(null, { addResult })(Dice)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { AddRow, ClearResults, Dice } from '../components/diceRoller'\n\nconst DiceRoller = ({ dice }) => {\n   return (\n      <>\n         {Object.entries(dice).map(([id, die]) => (\n            <Dice die={die} key={id} id={id} />\n         ))}\n         <AddRow />\n         <ClearResults />\n      </>\n   )\n}\n\nconst mapStateToProps = (state) => {\n   return { dice: state.dice }\n}\n\nexport default connect(mapStateToProps)(DiceRoller)\n","import React from 'react'\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CssBaseLine from '@material-ui/core/CssBaseline'\n\nimport Container from '@material-ui/core/Container'\n\nimport NavBar from './components/NavBar'\nimport { DiceRoller } from './pages'\n\nconst app = () => {\n   return (\n      <>\n         {/* <Router basename={'/dnd_dice_roller'}>\n            <CssBaseLine />\n            <NavBar />\n            <Container maxWidth='lg'>\n               <Switch>\n                  <Route path='/' exact component={DiceRoller} />\n                  <Route path='/ability-score-roller' component={AbilityScoreRoller} />\n               </Switch>\n            </Container>\n         </Router> */}\n         <CssBaseLine />\n         <NavBar />\n         <Container>\n            <DiceRoller />\n         </Container>\n      </>\n   )\n}\n\nexport default app\n","import React, { Component } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nclass AbilityScoreRoller extends Component {\n   render() {\n      return (\n         <Paper\n            elevation={1}\n            style={{\n               display: 'flex',\n               flexDirection: 'row',\n               alignItems: 'center',\n               padding: '10px',\n            }}>\n            <TextField\n               variant='outlined'\n               value='4'\n               disabled\n               margin='dense'\n               style={{ width: '40px', margin: '0px' }}\n               inputProps={{ style: { textAlign: 'center' } }}\n            />\n            <p style={{ margin: '0 10px', fontSize: '1.25rem' }}>d</p>\n            <ButtonGroup aria-label=' outlined button group' style={{ height: '40px' }}>\n               <Button>6</Button>\n               <Button>8</Button>\n               <Button>10</Button>\n               <Button>12</Button>\n            </ButtonGroup>\n         </Paper>\n      )\n   }\n}\n\nexport default AbilityScoreRoller\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './redux/reducers'\n\nimport App from './app'\n\nimport './style.scss'\n\nconst store = createStore(reducers)\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.querySelector('#root')\n)\n"],"sourceRoot":""}