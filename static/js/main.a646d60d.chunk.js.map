{"version":3,"sources":["reducers/diceReducer.js","reducers/resultsReducer.js","reducers/index.js","actions/types.js","reducers/editReducer.js","reducers/drawerReducer.js","components/NavBar.js","actions/index.js","components/dice/DieIcon.js","components/dice/DieAmount.js","components/dice/DieType.js","components/dice/ModAmount.js","components/dice/Reset.js","components/dice/RemoveRow.js","components/Dice.js","components/AddRow.js","components/ClearResults.js","components/EditSwitch.js","components/DiceRoller.js","components/AbilityScoreRoller.js","components/App.js","index.js"],"names":["initialState","0","dieAmount","dieType","modAmount","resetDie","id","Object","keys","length","nextId","combineReducers","dice","state","action","type","payload","newState","results","edit","drawer","links","to","title","NavBar","toggleDrawer","toggle","props","openDrawer","closeDrawer","renderNavItems","map","link","className","key","ListItem","button","onClick","ListItemIcon","ListItemText","primary","AppBar","position","style","margin","Container","maxWidth","disableGutters","Toolbar","display","justifyContent","IconButton","color","aria-label","Drawer","variant","anchor","open","this","ModalProps","onBackdropClick","Divider","List","component","subheader","ListSubheader","Component","connect","DieIcon","SvgIcon","viewBox","width","height","sides","d","renderIcon","DieAmount","handleDieAmount","e","updateDieAmount","target","value","label","TextField","onChange","InputProps","inputProps","min","textAlign","diceTypes","DieType","handleDieType","updateDieType","select","MenuItem","ModAmount","handleModAmount","updateModAmount","Reset","handleReset","resetRow","Button","RemoveRow","handleRemoveRow","removeRow","Dice","handleRoll","die","result","date","Date","toLocaleString","rolls","subtotal","total","Number","i","roll","Math","floor","random","ceil","addResult","renderDice","renderResult","undefined","join","abs","handleOnClick","Paper","elevation","marginBottom","ownProps","AddRow","handleAddRow","addRow","disableElevation","startIcon","clearResults","marginLeft","EditSwitch","handleEditSwitch","toggleEdit","FormControlLabel","control","Switch","checked","name","classes","withStyles","fontSize","DiceRoller","entries","AbilityScoreRoller","flexDirection","alignItems","padding","App","basename","path","exact","store","createStore","reducers","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a646d60d.chunk.js","sourcesContent":["import {\n   UPDATE_DIE_AMOUNT,\n   UPDATE_DIE_TYPE,\n   UPDATE_MOD_AMOUNT,\n   RESET_ROW,\n   REMOVE_ROW,\n   ADD_ROW,\n} from '../actions/types'\n\nconst initialState = {\n   0: {\n      dieAmount: 1,\n      dieType: 20,\n      modAmount: 0,\n   },\n}\n\nconst resetDie = {\n   dieAmount: 1,\n   dieType: 20,\n   modAmount: 0,\n}\n\nlet id = Object.keys(initialState).length - 1\nconst nextId = () => {\n   id++\n   return id\n}\n\nexport default (state = initialState, action) => {\n   switch (action.type) {\n      case UPDATE_DIE_AMOUNT:\n         return { ...state, [action.id]: { ...state[action.id], dieAmount: action.payload } }\n      case UPDATE_DIE_TYPE:\n         return { ...state, [action.id]: { ...state[action.id], dieType: action.payload } }\n      case UPDATE_MOD_AMOUNT:\n         return { ...state, [action.id]: { ...state[action.id], modAmount: action.payload } }\n      case RESET_ROW:\n         return { ...state, [action.id]: { ...resetDie } }\n      case REMOVE_ROW:\n         const { [action.id]: _, ...newState } = state\n         return newState\n      case ADD_ROW:\n         return { ...state, [nextId()]: { ...resetDie } }\n      default:\n         return state\n   }\n}\n","import { ADD_RESULT, CLEAR_RESULTS } from '../actions/types'\n\n// const storedResults = localStorage.getItem('results')\n\nlet initialState = {\n   // 0: {\n   //    date: Date.toLocaleString(),\n   //    rolls: [],\n   //    subtotal: 0,\n   //    total: 0,\n   //    modAmount: 0,\n   //    dieAmount: 0,\n   //    dieType: 0,\n   // },\n}\n\n// if (storedResults) {\n//    initialState = JSON.parse(storedResults)\n// } else {\n//    initialState = {}\n// }\n\nexport default (state = initialState, action) => {\n   switch (action.type) {\n      case ADD_RESULT:\n         // localStorage.setItem('results', JSON.stringify([action.payload, ...state]))\n         const { [action.id]: _, ...newState } = state\n         return { [action.id]: action.payload, ...newState }\n      case CLEAR_RESULTS:\n         // localStorage.setItem('results', JSON.stringify([]))\n         return {}\n      default:\n         return state\n   }\n}\n","import { combineReducers } from 'redux'\nimport diceReducer from './diceReducer'\nimport resultsReducer from './resultsReducer'\nimport editReducer from './editReducer'\nimport drawerReducer from './drawerReducer'\n\nexport default combineReducers({\n   dice: diceReducer,\n   results: resultsReducer,\n   edit: editReducer,\n   drawer: drawerReducer,\n})\n","export const UPDATE_DIE_AMOUNT = 'UPDATE_DIE_AMOUNT'\nexport const UPDATE_DIE_TYPE = 'UPDATE_DIE_TYPE'\nexport const UPDATE_MOD_AMOUNT = 'UPDATE_MOD_AMOUNT'\nexport const RESET_ROW = 'RESET_ROW'\nexport const REMOVE_ROW = 'REMOVE_ROW'\nexport const ADD_ROW = 'ADD_ROW'\n\nexport const ADD_RESULT = 'ADD_RESULT'\nexport const CLEAR_RESULTS = 'CLEAR_RESULTS'\n\nexport const TOGGLE_EDIT = 'TOGGLE_EDIT'\n\nexport const OPEN_DRAWER = 'OPEN_DRAWER'\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER'\n","import { TOGGLE_EDIT } from '../actions/types'\n\nexport default (state = false, action) => {\n   switch (action.type) {\n      case TOGGLE_EDIT:\n         return !state\n      default:\n         return state\n   }\n}\n","import { OPEN_DRAWER, CLOSE_DRAWER } from '../actions/types'\n\nexport default (state = false, action) => {\n   switch (action.type) {\n      case OPEN_DRAWER:\n         return true\n      case CLOSE_DRAWER:\n         return false\n      default:\n         return state\n   }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { openDrawer, closeDrawer } from '../actions'\nimport { Link } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Container from '@material-ui/core/Container'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport Drawer from '@material-ui/core/Drawer'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\nconst links = [\n   {\n      to: '/',\n      title: 'Dice Roller',\n   },\n   {\n      to: '/ability-score-roller',\n      title: 'Ability Score Roller',\n   },\n]\n\nclass NavBar extends Component {\n   toggleDrawer = (toggle) => {\n      if (toggle === 'open') {\n         this.props.openDrawer()\n      } else {\n         this.props.closeDrawer()\n      }\n   }\n\n   renderNavItems = (links) => {\n      return links.map((link) => (\n         <Link to={link.to} className='nav-link' key={link.title}>\n            <ListItem button onClick={() => this.toggleDrawer('close')}>\n               <ListItemIcon>\n                  <ArrowRightIcon />\n               </ListItemIcon>\n               <ListItemText primary={link.title} />\n            </ListItem>\n         </Link>\n      ))\n   }\n\n   render() {\n      return (\n         <>\n            <AppBar position='static' style={{ margin: '0 0 10px 0' }}>\n               <Container maxWidth='lg' disableGutters={true}>\n                  <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n                     <h2>DnD Dice Roller</h2>\n                     <IconButton\n                        color='inherit'\n                        aria-label='menu-open'\n                        onClick={() => this.toggleDrawer('open')}\n                     >\n                        <MenuIcon />\n                     </IconButton>\n                  </Toolbar>\n               </Container>\n            </AppBar>\n            <Drawer\n               variant='temporary'\n               anchor='right'\n               open={this.props.drawer}\n               ModalProps={{ onBackdropClick: this.toggleDrawer }}\n            >\n               <div className='nav-drawer'>\n                  <IconButton\n                     color='primary'\n                     onClick={() => this.toggleDrawer('close')}\n                     aria-label='menu-close'\n                     style={{ margin: '5px' }}\n                  >\n                     <ChevronRightIcon />\n                  </IconButton>\n                  <Divider />\n                  <List\n                     component='nav'\n                     subheader={\n                        <ListSubheader component='div'>What roll will you make?</ListSubheader>\n                     }\n                  >\n                     {this.renderNavItems(links)}\n                  </List>\n               </div>\n            </Drawer>\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n   return { drawer: state.drawer }\n}\n\nexport default connect(mapStateToProps, { openDrawer, closeDrawer })(NavBar)\n","import {\n   UPDATE_DIE_AMOUNT,\n   UPDATE_DIE_TYPE,\n   UPDATE_MOD_AMOUNT,\n   RESET_ROW,\n   REMOVE_ROW,\n   ADD_ROW,\n   ADD_RESULT,\n   CLEAR_RESULTS,\n   OPEN_DRAWER,\n   CLOSE_DRAWER,\n   TOGGLE_EDIT,\n} from './types'\n\nexport const updateDieAmount = (value, id) => {\n   return {\n      type: UPDATE_DIE_AMOUNT,\n      id,\n      payload: value,\n   }\n}\n\nexport const updateDieType = (value, id) => {\n   return {\n      type: UPDATE_DIE_TYPE,\n      id,\n      payload: value,\n   }\n}\n\nexport const updateModAmount = (value, id) => {\n   return {\n      type: UPDATE_MOD_AMOUNT,\n      id,\n      payload: value,\n   }\n}\n\nexport const resetRow = (id) => {\n   return {\n      type: RESET_ROW,\n      id,\n   }\n}\n\nexport const removeRow = (id) => {\n   return {\n      type: REMOVE_ROW,\n      id,\n   }\n}\n\nexport const addRow = () => {\n   return {\n      type: ADD_ROW,\n   }\n}\n\nexport const addResult = (result, id) => {\n   return {\n      type: ADD_RESULT,\n      payload: result,\n      id,\n   }\n}\n\nexport const clearResults = () => {\n   return {\n      type: CLEAR_RESULTS,\n   }\n}\n\nexport const toggleEdit = () => {\n   return {\n      type: TOGGLE_EDIT,\n   }\n}\n\nexport const openDrawer = () => {\n   return {\n      type: OPEN_DRAWER,\n   }\n}\n\nexport const closeDrawer = () => {\n   return {\n      type: CLOSE_DRAWER,\n   }\n}\n","import React from 'react'\nimport SvgIcon from '@material-ui/core/SvgIcon'\n\nconst DieIcon = (props) => {\n   const renderIcon = (sides) => {\n      switch (sides) {\n         case 4:\n            return (\n               <path d='M13.43,15.15H14.29V16.36H13.43V18H11.92V16.36H8.82L8.75,15.41L11.91,10.42H13.43V15.15M10.25,15.15H11.92V12.47L10.25,15.15M22,21H2C1.64,21 1.31,20.81 1.13,20.5C0.95,20.18 0.96,19.79 1.15,19.5L11.15,3C11.5,2.38 12.5,2.38 12.86,3L22.86,19.5C23.04,19.79 23.05,20.18 22.87,20.5C22.69,20.81 22.36,21 22,21M3.78,19H20.23L12,5.43L3.78,19Z' />\n            )\n         case 6:\n            return (\n               <path d='M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M5,5V19H19V5H5M13.39,9.53C10.89,9.5 10.86,11.53 10.86,11.53C10.86,11.53 11.41,10.87 12.53,10.87C13.19,10.87 14.5,11.45 14.55,13.41C14.61,15.47 12.77,16 12.77,16C12.77,16 9.27,16.86 9.3,12.66C9.33,7.94 13.39,8.33 13.39,8.33V9.53M11.95,12.1C11.21,12 10.83,12.78 10.83,12.78L10.85,13.5C10.85,14.27 11.39,14.83 12,14.83C12.61,14.83 13.05,14.27 13.05,13.5C13.05,12.73 12.56,12.1 11.95,12.1Z' />\n            )\n         case 8:\n            return (\n               <path d='M12 2C11.5 2 11 2.19 10.59 2.59L2.59 10.59C1.8 11.37 1.8 12.63 2.59 13.41L10.59 21.41C11.37 22.2 12.63 22.2 13.41 21.41L21.41 13.41C22.2 12.63 22.2 11.37 21.41 10.59L13.41 2.59C13 2.19 12.5 2 12 2M12 4L20 12L12 20L4 12M12 8.25C13.31 8.25 14.38 9.2 14.38 10.38C14.38 11.07 14 11.68 13.44 12.07C14.14 12.46 14.6 13.13 14.6 13.9C14.6 15.12 13.44 16.1 12 16.1C10.56 16.1 9.4 15.12 9.4 13.9C9.4 13.13 9.86 12.46 10.56 12.07C10 11.68 9.63 11.07 9.63 10.38C9.63 9.2 10.69 8.25 12 8.25M12 12.65C11.39 12.65 10.9 13.14 10.9 13.75C10.9 14.36 11.39 14.85 12 14.85C12.61 14.85 13.1 14.36 13.1 13.75C13.1 13.14 12.61 12.65 12 12.65M12 9.5C11.5 9.5 11.1 9.95 11.1 10.5C11.1 11.05 11.5 11.5 12 11.5C12.5 11.5 12.9 11.05 12.9 10.5C12.9 9.95 12.5 9.5 12 9.5' />\n            )\n         case 10:\n            return (\n               <path d='M10.5 16H9V10.21L7.22 10.76V9.53L10.36 8.41H10.5V16M14.07 8.21C15.5 8.21 16.64 9.36 16.64 10.78V13.42C16.64 14.84 15.5 16 14.07 16C12.64 16 11.5 14.84 11.5 13.42V10.78C11.5 9.36 12.65 8.21 14.07 8.21M14.06 9.65C13.47 9.65 13 10.13 13 10.71V13.5C13 14.07 13.47 14.54 14.06 14.54C14.64 14.54 15.14 14.06 15.14 13.5V10.71C15.14 10.12 14.64 9.65 14.06 9.65M12 2C11.5 2 11 2.19 10.59 2.59L2.59 10.59C1.8 11.37 1.8 12.63 2.59 13.41L10.59 21.41C11.37 22.2 12.63 22.2 13.41 21.41L21.41 13.41C22.2 12.63 22.2 11.37 21.41 10.59L13.41 2.59C13 2.19 12.5 2 12 2M12 4L20 12L12 20L4 12Z' />\n            )\n         case 12:\n            return (\n               <path d='M12,2L1.5,9.64L5.5,22H18.5L22.5,9.64L12,2M17,20H7L3.85,10.4L12,4.47L20.15,10.4L17,20M17,15.75V17H11.66V15.91C11.66,15.91 15.23,12.45 15.23,11.4C15.23,10.12 14.18,10.25 14.18,10.25C13.5,10.3 13,10.87 13,11.55H11.44C11.5,10.09 12.72,8.94 14.27,9C16.74,9 16.77,10.85 16.77,11.3C16.77,13.07 13.58,15.77 13.58,15.77L17,15.75M10.5,17H8.89V10.89L7,11.47V10.19L10.31,9H10.5V17Z' />\n            )\n         case 20:\n            return (\n               <path d='M21,16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V7.5C3,7.12 3.21,6.79 3.53,6.62L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.79,6.79 21,7.12 21,7.5V16.5M12,4.15L5,8.09V15.91L12,19.85L19,15.91V8.09L12,4.15M14.93,8.27A2.57,2.57 0 0,1 17.5,10.84V13.5C17.5,14.9 16.35,16.05 14.93,16.05C13.5,16.05 12.36,14.9 12.36,13.5V10.84A2.57,2.57 0 0,1 14.93,8.27M14.92,9.71C14.34,9.71 13.86,10.18 13.86,10.77V13.53C13.86,14.12 14.34,14.6 14.92,14.6C15.5,14.6 16,14.12 16,13.53V10.77C16,10.18 15.5,9.71 14.92,9.71M11.45,14.76V15.96L6.31,15.93V14.91C6.31,14.91 9.74,11.58 9.75,10.57C9.75,9.33 8.73,9.46 8.73,9.46C8.73,9.46 7.75,9.5 7.64,10.71L6.14,10.76C6.14,10.76 6.18,8.26 8.83,8.26C11.2,8.26 11.23,10.04 11.23,10.5C11.23,12.18 8.15,14.77 8.15,14.77L11.45,14.76Z' />\n            )\n         default:\n            return\n      }\n   }\n\n   return (\n      <>\n         <SvgIcon viewBox='0 0 24 24' style={{ width: '30px', height: '30px' }}>\n            {renderIcon(props.dieType)}\n         </SvgIcon>\n      </>\n   )\n}\n\nexport default DieIcon\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updateDieAmount } from '../../actions'\n\nimport TextField from '@material-ui/core/TextField'\n\nclass DieAmount extends Component {\n   handleDieAmount = (e) => {\n      this.props.updateDieAmount(e.target.value, this.props.id)\n   }\n\n   render() {\n      const { dieAmount, label } = this.props\n\n      return (\n         <TextField\n            value={dieAmount}\n            type='number'\n            label={label}\n            margin='dense'\n            variant='outlined'\n            onChange={this.handleDieAmount}\n            InputProps={{\n               inputProps: {\n                  min: 1,\n               },\n            }}\n            inputProps={{ style: { textAlign: 'center' } }}\n            style={{ width: '70px', margin: '4px 0' }}\n         />\n      )\n   }\n}\n\nexport default connect(null, { updateDieAmount })(DieAmount)\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { connect } from 'react-redux'\nimport { updateDieType } from '../../actions'\n\nconst diceTypes = [4, 6, 8, 10, 12, 20]\n\nclass DieType extends Component {\n   handleDieType = (e) => {\n      this.props.updateDieType(e.target.value, this.props.id)\n   }\n\n   render() {\n      const { dieType, label } = this.props\n\n      return (\n         <TextField\n            select\n            value={dieType}\n            label={label}\n            onChange={this.handleDieType}\n            margin='dense'\n            variant='outlined'\n            style={{ width: '80px', margin: '4px 0' }}\n         >\n            {diceTypes.map((type) => (\n               <MenuItem key={type} value={type}>\n                  {type}\n               </MenuItem>\n            ))}\n         </TextField>\n      )\n   }\n}\n\nexport default connect(null, { updateDieType })(DieType)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updateModAmount } from '../../actions'\n\nimport TextField from '@material-ui/core/TextField'\n\nclass ModAmount extends Component {\n   handleModAmount = (e) => {\n      this.props.updateModAmount(e.target.value, this.props.id)\n   }\n\n   render() {\n      const { modAmount, label } = this.props\n\n      return (\n         <TextField\n            value={modAmount}\n            type='number'\n            label={label}\n            onChange={this.handleModAmount}\n            margin='dense'\n            variant='outlined'\n            style={{ width: '70px', margin: '4px 0' }}\n         />\n      )\n   }\n}\n\nexport default connect(null, { updateModAmount })(ModAmount)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { resetRow } from '../../actions'\n\nimport Button from '@material-ui/core/Button'\n\nclass Reset extends Component {\n   handleReset = () => {\n      this.props.resetRow(this.props.id)\n   }\n\n   render() {\n      return (\n         <Button color='secondary' variant='outlined' onClick={this.handleReset}>\n            Reset\n         </Button>\n      )\n   }\n}\n\nexport default connect(null, { resetRow })(Reset)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { removeRow } from '../../actions'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\n\nclass RemoveRow extends Component {\n   handleRemoveRow = (e) => {\n      this.props.removeRow(this.props.id)\n   }\n\n   render() {\n      return (\n         <IconButton aria-label='delete' color='secondary' onClick={this.handleRemoveRow}>\n            <DeleteIcon />\n         </IconButton>\n      )\n   }\n}\n\nexport default connect(null, { removeRow })(RemoveRow)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addResult } from '../actions'\n\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\n\nimport DieIcon from './dice/DieIcon'\nimport DieAmount from './dice/DieAmount'\nimport DieType from './dice/DieType'\nimport ModAmount from './dice/ModAmount'\nimport Reset from './dice/Reset'\nimport RemoveRow from './dice/RemoveRow'\n\nclass Dice extends Component {\n   handleRoll = () => {\n      const { die, id } = this.props\n\n      const now = new Date()\n\n      let result = {\n         date: now.toLocaleString(),\n         rolls: [],\n         subtotal: 0,\n         total: 0,\n         modAmount: Number(die.modAmount),\n         dieAmount: die.dieAmount,\n         dieType: Number(die.dieType),\n      }\n\n      for (let i = 0; i < die.dieAmount; i++) {\n         if (die.dieType === 10) {\n            const roll = Math.floor(Math.random() * die.dieType)\n            result.rolls = [...result.rolls, roll]\n            result.subtotal += roll\n         } else {\n            const roll = Math.ceil(Math.random() * die.dieType)\n            result.rolls = [...result.rolls, roll]\n            result.subtotal += roll\n         }\n      }\n\n      result.total = result.subtotal + result.modAmount\n      this.props.addResult(result, id)\n   }\n\n   renderDice = (dieAmount, dieType, modAmount, id) => {\n      if (this.props.edit) {\n         return (\n            <div className='dice'>\n               <div className='dice-comp'>\n                  <DieIcon dieType={dieType} />\n               </div>\n               <div className='dice-comp'>\n                  <DieAmount dieAmount={dieAmount} id={id} />\n               </div>\n               <div className='dice-comp'>\n                  <span>d</span>\n               </div>\n               <div className='dice-comp'>\n                  <DieType dieType={dieType} id={id} />\n               </div>\n               <div className='dice-comp'>\n                  <ModAmount modAmount={modAmount} id={id} />\n               </div>\n               <div className='dice-comp'>\n                  <Reset id={id} />\n                  <RemoveRow id={id} />\n               </div>\n            </div>\n         )\n      } else {\n         return (\n            <div className='dice dice-clickable' onClick={this.handleRoll}>\n               <div className='dice-comp'>\n                  <DieIcon dieType={dieType} />\n               </div>\n               <div className='dice-comp'>\n                  <span className='dice-comp-info'>{dieAmount}</span>\n               </div>\n               <div className='dice-comp'>\n                  <span>d</span>\n               </div>\n               <div className='dice-comp'>\n                  <span className='dice-comp-info'>{dieType}</span>\n               </div>\n               <div className='dice-comp'>\n                  <span className='dice-comp-info'>{modAmount}</span>\n               </div>\n            </div>\n         )\n      }\n   }\n\n   renderResult = (result) => {\n      if (result === undefined) {\n         return (\n            <div className='result'>\n               <div className='result-comp'>\n                  <span>Click the die row to get results!</span>\n               </div>\n            </div>\n         )\n      } else {\n         return (\n            <div className='result'>\n               <div className='result-comp'>\n                  <span>{result.rolls.join('+')}</span>\n               </div>\n               <div className='result-comp'>\n                  <span>=</span>\n               </div>\n               <div className='result-comp'>\n                  <span>{result.subtotal}</span>\n               </div>\n               <div className='result-comp'>\n                  <span>{result.modAmount >= 0 ? '+' : '-'}</span>\n               </div>\n               <div className='result-comp'>{Math.abs(result.modAmount)}</div>\n               <div className='result-comp'>\n                  <span>=</span>\n               </div>\n               <div className='result-comp'>\n                  <span>{result.total}</span>\n               </div>\n            </div>\n         )\n      }\n   }\n\n   handleOnClick = () => {\n      if (!this.props.edit) {\n         this.handleRoll()\n      }\n   }\n\n   render() {\n      const { dieAmount, dieType, modAmount } = this.props.die\n      const id = this.props.id\n      const result = this.props.result\n\n      return (\n         <Paper elevation={1} style={{ marginBottom: '10px' }}>\n            {this.renderDice(dieAmount, dieType, modAmount, id)}\n            <Divider />\n            {this.renderResult(result)}\n         </Paper>\n      )\n   }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n   return { edit: state.edit, result: state.results[ownProps.id] }\n}\n\nexport default connect(mapStateToProps, { addResult })(Dice)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addRow } from '../actions'\n\nimport Button from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add'\n\nclass AddRow extends Component {\n   handleAddRow = () => {\n      this.props.addRow()\n   }\n\n   render() {\n      return (\n         <Button\n            variant='outlined'\n            color='primary'\n            disableElevation\n            startIcon={<AddIcon />}\n            onClick={this.handleAddRow}\n         >\n            Add Row\n         </Button>\n      )\n   }\n}\n\nexport default connect(null, { addRow })(AddRow)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { clearResults } from '../actions'\n\nimport Button from '@material-ui/core/Button'\nimport RotateRightIcon from '@material-ui/icons/RotateRight'\n\nconst ClearResults = (props) => {\n   const handleClearResults = () => {\n      props.clearResults()\n   }\n\n   return (\n      <Button\n         variant='outlined'\n         disableElevation\n         color='secondary'\n         startIcon={<RotateRightIcon />}\n         onClick={handleClearResults}\n         style={{ marginLeft: '10px' }}\n      >\n         Clear Results\n      </Button>\n   )\n}\n\nexport default connect(null, { clearResults })(ClearResults)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { toggleEdit } from '../actions'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nconst styles = {\n   label: {\n      fontSize: '14px',\n   },\n}\n\nclass EditSwitch extends Component {\n   handleEditSwitch = () => {\n      this.props.toggleEdit()\n   }\n\n   render() {\n      return (\n         <>\n            <FormControlLabel\n               control={\n                  <Switch\n                     checked={this.edit}\n                     onChange={this.handleEditSwitch}\n                     name='checkedB'\n                     color='primary'\n                  />\n               }\n               label='edit'\n               classes={{ label: this.props.classes.label }}\n            />\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n   return { edit: state.edit }\n}\n\nexport default connect(mapStateToProps, { toggleEdit })(withStyles(styles)(EditSwitch))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Dice from './Dice'\nimport AddRow from './AddRow'\nimport ClearResults from './ClearResults'\nimport EditSwitch from './EditSwitch'\n\nclass DiceRoller extends Component {\n   render() {\n      return (\n         <>\n            <div>\n               <div className='dice'>\n                  <div className='dice-comp dice-label'>\n                     <span>dice</span>\n                  </div>\n                  <div className='dice-comp type-label'>\n                     <span>type</span>\n                  </div>\n                  <div className='dice-comp mod-label'>\n                     <span>mod</span>\n                  </div>\n                  <div className='dice-comp edit-switch'>\n                     <EditSwitch />\n                  </div>\n               </div>\n               {Object.entries(this.props.dice).map(([id, die]) => (\n                  <Dice die={die} key={id} id={id} />\n               ))}\n               <AddRow />\n               <ClearResults />\n            </div>\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => {\n   return { dice: state.dice }\n}\n\nexport default connect(mapStateToProps)(DiceRoller)\n","import React, { Component } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nclass AbilityScoreRoller extends Component {\n   render() {\n      return (\n         <Paper\n            elevation={1}\n            style={{\n               display: 'flex',\n               flexDirection: 'column',\n               alignItems: 'center',\n               padding: '10px',\n            }}\n         >\n            {/* <TextField\n               variant='outlined'\n               value='4'\n               disabled\n               margin='dense'\n               style={{ width: '40px', margin: '0px' }}\n               inputProps={{ style: { textAlign: 'center' } }}\n            />\n            <p style={{ margin: '0 10px', fontSize: '1.25rem' }}>d</p>\n            <ButtonGroup aria-label=' outlined button group' style={{ height: '40px' }}>\n               <Button>6</Button>\n               <Button>8</Button>\n               <Button>10</Button>\n               <Button>12</Button>\n            </ButtonGroup> */}\n            <h2>Ability Score Roller</h2>\n            <span>Under construction</span>\n         </Paper>\n      )\n   }\n}\n\nexport default AbilityScoreRoller\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CssBaseLine from '@material-ui/core/CssBaseline'\n\nimport Container from '@material-ui/core/Container'\n\nimport NavBar from './NavBar'\nimport DiceRoller from './DiceRoller'\nimport AbilityScoreRoller from './AbilityScoreRoller'\n\nclass App extends Component {\n   render() {\n      return (\n         <>\n            <Router basename={'/'}>\n               <CssBaseLine />\n               <NavBar />\n               <Container maxWidth='lg'>\n                  <Switch>\n                     <Route path='/' exact component={DiceRoller} />\n                     <Route path='/ability-score-roller' component={AbilityScoreRoller} />\n                  </Switch>\n               </Container>\n            </Router>\n         </>\n      )\n   }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\n\nimport App from './components/App'\n\nimport './style.scss'\n\nconst store = createStore(reducers)\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.querySelector('#root')\n)\n"],"sourceRoot":""}